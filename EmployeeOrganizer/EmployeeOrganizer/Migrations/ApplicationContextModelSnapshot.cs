// <auto-generated />
using System;
using EmployeeOrganizer.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EmployeeOrganizer.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EmployeeOrganizer.Models.Activity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<long>("EmployeeId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Activities");
                });

            modelBuilder.Entity("EmployeeOrganizer.Models.Department", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Active = true,
                            Name = "Budapest",
                            ShortName = "BP"
                        },
                        new
                        {
                            Id = 2L,
                            Active = true,
                            Name = "Zalaegerszeg",
                            ShortName = "Zala"
                        },
                        new
                        {
                            Id = 3L,
                            Active = true,
                            Name = "Szeged",
                            ShortName = "SZE"
                        },
                        new
                        {
                            Id = 4L,
                            Active = true,
                            Name = "Szolnok",
                            ShortName = "SZO"
                        });
                });

            modelBuilder.Entity("EmployeeOrganizer.Models.Employee", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<long?>("DepartmentId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("RankId")
                        .HasColumnType("bigint");

                    b.Property<long?>("SuperiorId")
                        .HasColumnType("bigint");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("RankId");

                    b.HasIndex("SuperiorId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Active = true,
                            DepartmentId = 1L,
                            Name = "John Doe",
                            Password = "$2a$11$k/s5NQdFWpLNYuoXCuQC.e2BapG/hd3SdlxVXBeKDu/xqebqqEAvS",
                            PhoneNumber = "+36204567897",
                            RankId = 1L,
                            Username = "JoDo"
                        },
                        new
                        {
                            Id = 2L,
                            Active = true,
                            DepartmentId = 2L,
                            Name = "Elizabeth Doe",
                            Password = "$2a$11$k/s5NQdFWpLNYuoXCuQC.e2BapG/hd3SdlxVXBeKDu/xqebqqEAvS",
                            PhoneNumber = "+36704563497",
                            RankId = 2L,
                            SuperiorId = 1L,
                            Username = "ElDo"
                        },
                        new
                        {
                            Id = 3L,
                            Active = true,
                            DepartmentId = 1L,
                            Name = "Alice Doe",
                            Password = "$2a$11$k/s5NQdFWpLNYuoXCuQC.e2BapG/hd3SdlxVXBeKDu/xqebqqEAvS",
                            PhoneNumber = "+36204357297",
                            RankId = 3L,
                            SuperiorId = 1L,
                            Username = "AlDo"
                        },
                        new
                        {
                            Id = 4L,
                            Active = true,
                            DepartmentId = 4L,
                            Name = "Steve Doe",
                            Password = "$2a$11$k/s5NQdFWpLNYuoXCuQC.e2BapG/hd3SdlxVXBeKDu/xqebqqEAvS",
                            PhoneNumber = "+36704542317",
                            RankId = 5L,
                            SuperiorId = 1L,
                            Username = "StDo"
                        });
                });

            modelBuilder.Entity("EmployeeOrganizer.Models.Rank", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Rank");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Active = true,
                            Name = "Architect"
                        },
                        new
                        {
                            Id = 2L,
                            Active = true,
                            Name = "Software Engineer"
                        },
                        new
                        {
                            Id = 3L,
                            Active = true,
                            Name = "Scrum Master"
                        },
                        new
                        {
                            Id = 4L,
                            Active = true,
                            Name = "Project Owner"
                        },
                        new
                        {
                            Id = 5L,
                            Active = true,
                            Name = "Tech Lead"
                        });
                });

            modelBuilder.Entity("EmployeeOrganizer.Models.Employee", b =>
                {
                    b.HasOne("EmployeeOrganizer.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId");

                    b.HasOne("EmployeeOrganizer.Models.Rank", "Rank")
                        .WithMany()
                        .HasForeignKey("RankId");

                    b.HasOne("EmployeeOrganizer.Models.Employee", "Superior")
                        .WithMany()
                        .HasForeignKey("SuperiorId");

                    b.Navigation("Department");

                    b.Navigation("Rank");

                    b.Navigation("Superior");
                });
#pragma warning restore 612, 618
        }
    }
}
